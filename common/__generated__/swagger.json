{
	"openapi": "3.0.0",
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"FirebaseFirestore.Timestamp": {
				"description": "A Timestamp represents a point in time independent of any time zone or\ncalendar, represented as seconds and fractions of seconds at nanosecond\nresolution in UTC Epoch time. It is encoded using the Proleptic Gregorian\nCalendar which extends the Gregorian calendar backwards to year one. It is\nencoded assuming all minutes are 60 seconds long, i.e. leap seconds are\n\"smeared\" so that no leap second table is needed for interpretation. Range\nis from 0001-01-01T00:00:00Z to 9999-12-31T23:59:59.999999999Z.",
				"properties": {
					"seconds": {
						"type": "number",
						"format": "double",
						"description": "The number of seconds of UTC time since Unix epoch 1970-01-01T00:00:00Z."
					},
					"nanoseconds": {
						"type": "number",
						"format": "double",
						"description": "The non-negative fractions of a second at nanosecond resolution."
					}
				},
				"required": [
					"seconds",
					"nanoseconds"
				],
				"type": "object",
				"additionalProperties": false
			},
			"UserAdditionalInfo": {
				"properties": {
					"date_of_birth": {
						"$ref": "#/components/schemas/FirebaseFirestore.Timestamp"
					},
					"does_freestyle": {
						"type": "boolean"
					},
					"does_racing": {
						"type": "boolean"
					},
					"does_ski": {
						"type": "boolean"
					},
					"emergency_name": {
						"type": "string"
					},
					"emergency_phone": {
						"type": "string"
					},
					"emergency_relation": {
						"type": "string"
					},
					"first_name": {
						"type": "string"
					},
					"last_name": {
						"type": "string"
					},
					"membership": {
						"type": "string",
						"enum": [
							"admin",
							"member"
						]
					}
				},
				"required": [
					"date_of_birth",
					"does_freestyle",
					"does_racing",
					"does_ski",
					"emergency_name",
					"emergency_phone",
					"emergency_relation",
					"first_name",
					"last_name",
					"membership"
				],
				"type": "object",
				"additionalProperties": false
			},
			"FirebaseProperties": {
				"properties": {
					"uid": {
						"type": "string"
					}
				},
				"required": [
					"uid"
				],
				"type": "object",
				"additionalProperties": false
			},
			"UserResponse": {
				"allOf": [
					{
						"$ref": "#/components/schemas/UserAdditionalInfo"
					},
					{
						"$ref": "#/components/schemas/FirebaseProperties"
					}
				]
			},
			"EditUsersRequestBody": {
				"properties": {
					"users": {
						"items": {
							"properties": {
								"updatedInformation": {
									"$ref": "#/components/schemas/UserAdditionalInfo"
								},
								"uid": {
									"type": "string"
								}
							},
							"required": [
								"updatedInformation",
								"uid"
							],
							"type": "object"
						},
						"type": "array"
					}
				},
				"required": [
					"users"
				],
				"type": "object",
				"additionalProperties": false
			}
		},
		"securitySchemes": {
			"jwt": {
				"type": "http",
				"scheme": "bearer",
				"bearerFormat": "JWT"
			}
		}
	},
	"info": {
		"title": "server",
		"version": "1.0.0",
		"contact": {}
	},
	"paths": {
		"/users": {
			"get": {
				"operationId": "GetAllUsers",
				"responses": {
					"200": {
						"description": "Users found",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/UserResponse"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"security": [
					{
						"jwt": [
							"admin"
						]
					}
				],
				"parameters": []
			},
			"post": {
				"operationId": "CreateUser",
				"responses": {
					"200": {
						"description": "Created"
					}
				},
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"id": {
										"type": "string"
									}
								},
								"required": [
									"id"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/users/self": {
			"get": {
				"operationId": "GetSelf",
				"responses": {
					"200": {
						"description": "Fetched self data",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UserResponse"
								}
							}
						}
					}
				},
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": []
			}
		},
		"/users/bulk-edit": {
			"post": {
				"operationId": "EditUsers",
				"responses": {
					"200": {
						"description": "Edited"
					}
				},
				"security": [
					{
						"jwt": [
							"admin"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/EditUsersRequestBody"
							}
						}
					}
				}
			}
		}
	},
	"servers": [
		{
			"url": "/"
		}
	]
}